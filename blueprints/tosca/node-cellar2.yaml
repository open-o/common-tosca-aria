#
# Copyright (c) 2016 GigaSpaces Technologies Ltd. All rights reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

tosca_definitions_version: tosca_simple_yaml_1_0

description: >-
  Node Cellar TOSCA blueprint.

metadata:
  template_name: node-cellar
  template_author: ARIA
  template_version: 1.0.0

imports:
  - types/openstack.yaml
  - types/nodejs.yaml
  - types/mongodb.yaml
  - tosca-simple-nfv-1.0/tosca-simple-nfv-1.0.yaml # importing this only for validation

dsl_definitions:

  openstack_credential: &OPENSTACK_CREDENTIAL
    user: openstackadmin
    token: openstack123

repositories:

  node_cellar:
    description: >-
      The repository for the Node Cellar application and its dependencies.
    url: https://github.com/cloudify-cosmo/nodecellar/archive

relationship_types:

  ConnectsTo:
    derived_from: tosca.relationships.ConnectsTo
    interfaces:
      standard2:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          input1:
            type: string
            default: hat
        create:
          inputs:
            input2:
              type: integer
          implementation:
            primary: scripts/doit.sh
            dependencies:
              - utils/os.sh

node_types:

  NodeMongoApplication:
    derived_from: nodejs.Application
    requirements:
      - database:
          capability: tosca.capabilities.Endpoint.Database
          node: mongodb.Database
#          relationship:
#            type: tosca.relationships.AttachesTo #test
#            interfaces:
#              standard1:
#                inputs:
#                  fishy:
#                    type: string
#                create3:
#                  inputs:
#                    fuasd:
#                      type: integer

topology_template:

  inputs:
    openstack_credential:
      type: openstack.Credential

  relationship_templates:
  
    connects_to:
      type: ConnectsTo
      interfaces:
        standard2:
          inputs:
            input1: hello!!
          create:
            inputs:
              input2: 2
            implementation: test

  node_templates:
  
    # Application

    node_cellar:
      description: >-
        Node Cellar Node.js web application.
      type: NodeMongoApplication
      artifacts:
        node_cellar:
          description: >-
            The Node Cellar application package.
          type: os.Archive
          file: master.tar.gz
          repository: node_cellar
          deploy_path: /opt/nodejs/applications/node-cellar
#      requirements:
#        #- database: node_cellar_database
#        - database:
#            node: node_cellar_database
#            capability: database_endpoint
#            relationship:
#              #type: tosca.relationships.AttachesTo # relationship type or relationship template
#              #type: ConnectsTo
#              #type: connects_to
#              properties:
#                credential:
#                  user: admin
#                  token: admin123
#                location: /dev/s
#              interfaces:
#                standard1:
#                  inputs:
#                    fishy: ddddddddddddddd
#                  create3:
#                    inputs:
#                      fuasd: 222
#                #standard2:
#                  #inputs:
#                  #  input1: asdadsd
#                #  create:
#                #    inputs:
#                #      input2: 23
        #- database:
        #    capability: tosca.capabilities.Endpoint.Database
        #- database:
        #    node: mongodb.Database
        #- database:
        #    node: tosca.nodes.LoadBalancer
        #- database:
        #    node: node_cellar_database
        #    capability: database_endpoint
      capabilities:
        app_endpoint:
          properties:
            protocol: udp
            url_path: /nodecellar
    
    node_cellar_database:
      description: >-
        Node Cellar MongoDB database.
      type: mongodb.Database
      properties:
        name: node_cellar
      artifacts:
        initial:
          description: >-
            The Node Cellar initial database.
          type: mongodb.DatabaseDump
          file: node-cellar.json
          repository: node_cellar

    # Server software
    
    nodejs:
      description: >-
        Node.js instance.
      type: nodejs.Server
      requirements:
        - host: application_host
      node_filter: # cannot be validated
        properties:
          - flavor_name: { valid_values: [ m1.small ] }
        capabilities:
          - scalable:
              properties:
                - max_instances: { greater_or_equal: 8 }

    mongodb:
      description: >-
        MongoDB instance.
      type: mongodb.Server
      requirements:
        #- host: data_host
        - host:
            node: openstack.Instance #tosca.nodes.Compute
            node_filter:
              properties:
                - flavor_name: { valid_values: [ m1.medium, m1.large ] }
                - flavor_id: { pattern: '5d6' }
              capabilities:
                - scalable:
                    properties:
                      - max_instances: { greater_or_equal: 8 }
    
    # Hosts

    application_host:
      description: >-
        Host for applications.
      type: openstack.Instance
      properties:
        flavor_name: m1.small
        os_users: # map of os.UserInfo
          root:
            password: admin123
          nodejs:
            password: nodejs123
            groups:
              - www-data
      interfaces:
        standard:
          inputs:
            openstack_credential: *OPENSTACK_CREDENTIAL
      capabilities:
        scalable:
          properties:
            max_instances: 10

    data_host:
      description: >-
        Host for data.
      type: openstack.Instance
      properties:
        flavor_name: m1.large
        flavor_id: 5d62e82c-924e-4fa9-b1e4-c133867596f7
        os_users: # map of os.UserInfo
          root:
            password: admin123 
          mongodb:
            password: mongo123
      interfaces:
        standard:
          inputs:
            openstack_credential: *OPENSTACK_CREDENTIAL
      requirements:
        - local_storage:
            node: data_volume
            relationship:
              properties:
                location: /mnt/volume
      capabilities:
        scalable:
          properties:
            max_instances: 10

    data_volume:
      type: openstack.Volume
      properties:
        size: 10 GB
        volume_type: { get_property: [ SELF, size, a, b, c] }
      interfaces:
        standard:
          inputs:
            openstack_credential: { get_input: openstack_credential }

  groups:
  
    node_cellar_group:
      type: openstack.Secured
      members:
        - application_host
        - data_host
      interfaces:
        standard:
          inputs:
            openstack_credential: *OPENSTACK_CREDENTIAL

  policies:
  
    scaling:
      type: openstack.Scaling
      properties:
        bandwidth_threshold: 2 GB
      targets: # node templates or groups
        - node_cellar_group

  outputs:
    user_port:
      type: tosca.datatypes.network.PortInfo
      value: { get_nodes_of_type: openstack.Instance }
    prop:
      value: { get_property: [ connects_to, size, a, b, c] }
    in:
      type: string
      value: { get_input: { get_input: openstack_credential } }
    test:
      type: string
      value: { token: [ 'one,two,three', ',', 1 ] }

